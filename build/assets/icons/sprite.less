/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-instagram-name: 'icon-Instagram';
@icon-instagram-x: 51px;
@icon-instagram-y: 0px;
@icon-instagram-offset-x: -51px;
@icon-instagram-offset-y: 0px;
@icon-instagram-width: 41px;
@icon-instagram-height: 41px;
@icon-instagram-total-width: 92px;
@icon-instagram-total-height: 125px;
@icon-instagram-image: '../assets/icons/sprite.png';
@icon-instagram: 51px 0px -51px 0px 41px 41px 92px 125px '../assets/icons/sprite.png' 'icon-Instagram';
@icon-arrow-long-name: 'icon-arrow-long';
@icon-arrow-long-x: 0px;
@icon-arrow-long-y: 51px;
@icon-arrow-long-offset-x: 0px;
@icon-arrow-long-offset-y: -51px;
@icon-arrow-long-width: 15px;
@icon-arrow-long-height: 74px;
@icon-arrow-long-total-width: 92px;
@icon-arrow-long-total-height: 125px;
@icon-arrow-long-image: '../assets/icons/sprite.png';
@icon-arrow-long: 0px 51px 0px -51px 15px 74px 92px 125px '../assets/icons/sprite.png' 'icon-arrow-long';
@icon-facebook-white-name: 'icon-facebook-white';
@icon-facebook-white-x: 25px;
@icon-facebook-white-y: 80px;
@icon-facebook-white-offset-x: -25px;
@icon-facebook-white-offset-y: -80px;
@icon-facebook-white-width: 9px;
@icon-facebook-white-height: 19px;
@icon-facebook-white-total-width: 92px;
@icon-facebook-white-total-height: 125px;
@icon-facebook-white-image: '../assets/icons/sprite.png';
@icon-facebook-white: 25px 80px -25px -80px 9px 19px 92px 125px '../assets/icons/sprite.png' 'icon-facebook-white';
@icon-facebook-name: 'icon-facebook';
@icon-facebook-x: 0px;
@icon-facebook-y: 0px;
@icon-facebook-offset-x: 0px;
@icon-facebook-offset-y: 0px;
@icon-facebook-width: 41px;
@icon-facebook-height: 41px;
@icon-facebook-total-width: 92px;
@icon-facebook-total-height: 125px;
@icon-facebook-image: '../assets/icons/sprite.png';
@icon-facebook: 0px 0px 0px 0px 41px 41px 92px 125px '../assets/icons/sprite.png' 'icon-facebook';
@icon-hamburger-name: 'icon-hamburger';
@icon-hamburger-x: 25px;
@icon-hamburger-y: 51px;
@icon-hamburger-offset-x: -25px;
@icon-hamburger-offset-y: -51px;
@icon-hamburger-width: 27px;
@icon-hamburger-height: 19px;
@icon-hamburger-total-width: 92px;
@icon-hamburger-total-height: 125px;
@icon-hamburger-image: '../assets/icons/sprite.png';
@icon-hamburger: 25px 51px -25px -51px 27px 19px 92px 125px '../assets/icons/sprite.png' 'icon-hamburger';
@icon-instagram-white-name: 'icon-instagram-white';
@icon-instagram-white-x: 62px;
@icon-instagram-white-y: 51px;
@icon-instagram-white-offset-x: -62px;
@icon-instagram-white-offset-y: -51px;
@icon-instagram-white-width: 18px;
@icon-instagram-white-height: 19px;
@icon-instagram-white-total-width: 92px;
@icon-instagram-white-total-height: 125px;
@icon-instagram-white-image: '../assets/icons/sprite.png';
@icon-instagram-white: 62px 51px -62px -51px 18px 19px 92px 125px '../assets/icons/sprite.png' 'icon-instagram-white';
@spritesheet-width: 92px;
@spritesheet-height: 125px;
@spritesheet-image: '../assets/icons/sprite.png';
@spritesheet-sprites: @icon-instagram @icon-arrow-long @icon-facebook-white @icon-facebook @icon-hamburger @icon-instagram-white;
@spritesheet: 92px 125px '../assets/icons/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(%a)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
